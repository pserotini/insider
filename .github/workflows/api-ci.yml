name: API CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências da API
        run: |
          pip install -r requirements_api.txt
          pip install pytest requests
      - name: Instalar dependências da API
        run: |
          pip install -r requirements_api.txt
          pip install pytest requests

      - name: Start FastAPI in background
        run: |
          uvicorn src.api:app --host 0.0.0.0 --port 8000 &
          sleep 5
          curl --fail http://localhost:8000/health
      - name: Start FastAPI in background
        run: |
          uvicorn src.api:app --host 0.0.0.0 --port 8000 &
          sleep 5
          curl --fail http://localhost:8000/health

      - name: Rodar testes com pytest
        run: pytest tests
      - name: Rodar testes com pytest
        run: pytest tests

  deploy-to-ec2:
    needs: test-api
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Copiar arquivos para EC2 via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "~/insider"
      - name: Copiar arquivos para EC2 via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "~/insider"

      - name: Rodar Docker na EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/insider

            echo "==> Parando containers que usam a porta 8000 (se houver)"
            docker ps -q --filter "publish=8000" | xargs -r docker stop

            echo "==> Removendo containers que usam a porta 8000 (se houver)"
            docker ps -a -q --filter "publish=8000" | xargs -r docker rm -f

            echo "==> Removendo container chamado 'titanic-api' (se existir)"
            docker rm -f titanic-api || true

            echo "==> Buildando imagem"
            docker build -t titanic-api .

            echo "==> Subindo novo container"
            docker run -d --name titanic-api -p 8000:8000 titanic-api
